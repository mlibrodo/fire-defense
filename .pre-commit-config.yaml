repos:
  # =============================================================================
  # TOP-LEVEL CHECKS (apply to all files in the monorepo)
  # =============================================================================

  # End of line checks and file validation
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-json
      - id: check-toml
      - id: debug-statements

  # =============================================================================
  # RUST COMPONENTS
  # =============================================================================

  # Rust formatting for all Rust files
  - repo: local
    hooks:
      - id: rustfmt
        name: rustfmt
        entry: bash -c 'find . -name "*.rs" -exec rustfmt {} \;'
        language: system
        pass_filenames: false
        always_run: true

  # Cargo check for Rust components
  - repo: local
    hooks:
      - id: cargo-check
        name: cargo check
        entry: bash -c 'find . -name "Cargo.toml" -execdir cargo check \;'
        language: system
        pass_filenames: false
        always_run: true

  # Clippy linting for Rust components
  - repo: local
    hooks:
      - id: clippy
        name: clippy
        entry: bash -c 'find . -name "Cargo.toml" -execdir cargo clippy --all-targets --all-features \;'
        language: system
        pass_filenames: false
        always_run: true

    # =============================================================================
  # PYTHON COMPONENTS
  # =============================================================================

  # Python formatting
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3
        files: ^.*\.py$

  # Python linting
  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        files: ^.*\.py$
        args: [--max-line-length=131]

  # Python import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        files: ^.*\.py$
        args: [--profile, black]

  # =============================================================================
  # TYPESCRIPT/JAVASCRIPT COMPONENTS
  # =============================================================================

  # TypeScript/JavaScript formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.0
    hooks:
      - id: prettier
        files: ^.*\.(js|ts|jsx|tsx|json|css|md|yaml|yml)$

  # ESLint for TypeScript/JavaScript
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v9.0.0
    hooks:
      - id: eslint
        files: ^.*\.(js|ts|jsx|tsx)$
        additional_dependencies:
          - eslint@^8.0.0
          - "@typescript-eslint/eslint-plugin@^6.0.0"
          - "@typescript-eslint/parser@^6.0.0"

  # =============================================================================
  # JAVA COMPONENTS
  # =============================================================================

  # Java formatting (Google Java Format)
  - repo: https://github.com/maltzj/google-style-precommit-hook
    rev: b7e9e7fcba4a5aea463e72fe9964c14877bd8130
    hooks:
      - id: google-style-java
        files: ^.*\.java$

  # =============================================================================
  # GO COMPONENTS
  # =============================================================================

  # Go formatting
  - repo: https://github.com/dnephin/pre-commit-golang
    rev: v0.5.1
    hooks:
      - id: go-fmt
        files: ^.*\.go$

      - id: go-vet
        files: ^.*\.go$

      - id: go-imports
        files: ^.*\.go$

      - id: golangci-lint
        files: ^.*\.go$
